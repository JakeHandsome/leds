/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_COLOR_PB_H_INCLUDED
#define PB_COLOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Color { 
    int32_t r; 
    int32_t g; 
    int32_t b; 
} Color;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Color_init_default                       {0, 0, 0}
#define Color_init_zero                          {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Color_r_tag                              1
#define Color_g_tag                              2
#define Color_b_tag                              3

/* Struct field encoding specification for nanopb */
#define Color_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    r,                 1) \
X(a, STATIC,   SINGULAR, INT32,    g,                 2) \
X(a, STATIC,   SINGULAR, INT32,    b,                 3)
#define Color_CALLBACK NULL
#define Color_DEFAULT NULL

extern const pb_msgdesc_t Color_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Color_fields &Color_msg

/* Maximum encoded size of messages (where known) */
#define Color_size                               33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
