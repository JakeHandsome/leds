/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_ESP32INIT_PB_H_INCLUDED
#define PB_ESP32INIT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ESP32Init { 
    bool has_name;
    char name[128]; 
} ESP32Init;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ESP32Init_init_default                   {false, ""}
#define ESP32Init_init_zero                      {false, ""}

/* Field tags (for use in manual encoding/decoding) */
#define ESP32Init_name_tag                       1

/* Struct field encoding specification for nanopb */
#define ESP32Init_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, STRING,   name,              1)
#define ESP32Init_CALLBACK NULL
#define ESP32Init_DEFAULT NULL

extern const pb_msgdesc_t ESP32Init_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ESP32Init_fields &ESP32Init_msg

/* Maximum encoded size of messages (where known) */
#define ESP32Init_size                           130

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
